name: lambda

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read # This is required for actions/checkout

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    environment:
      name: "production"
    steps:
      - name: Git clone the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3
        with:
          install: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: github-actions-webkit-content-filter
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2

      - name: Build base image
        id: build-base-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: webkit-content-filter-validator
          IMAGE_TAG: base-${{ github.sha }}
        run: |
          docker buildx build --push \
          --provenance=false \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          --cache-from=type=registry,ref=$ECR_REGISTRY/$ECR_REPOSITORY:base-latest \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:base-latest .
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Build lambda image
        id: build-lambda-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: webkit-content-filter-validator
          IMAGE_TAG: lambda-${{ github.sha }}
        run: |
          docker buildx build --push --build-arg BASE_IMAGE=${{ steps.build-base-image.outputs.image }} \
          --provenance=false \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          --cache-from=type=registry,ref=$ECR_REGISTRY/$ECR_REPOSITORY:lambda-latest \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:lambda-latest lambda/
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
          # Cannot use `--cache-to` due to https://github.com/docker/buildx/issues/271
          # Caching to `latest` with inline caching which seems to work

      - name: Update lambda function
        run: |
          aws lambda update-function-code --function-name "arn:aws:lambda:us-west-2:332949624758:function:webkit-content-filter-validator" --image-uri ${{ steps.build-lambda-image.outputs.image }}
